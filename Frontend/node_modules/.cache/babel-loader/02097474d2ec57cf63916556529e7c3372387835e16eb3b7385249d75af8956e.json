{"ast":null,"code":"var _jsxFileName = \"/Users/tanmayiballa/User_interactive_image_segmentation/image-processing-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [outputPath, setOutputPath] = useState(null);\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleFileUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:8000/uploadfile/', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      console.log(result.output);\n      setOutputPath(result.output);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const handleDownload = async () => {\n    // Trigger download for the processed file\n    window.open(`http://localhost:8000/download/sample_out_det.jpg`, '_blank');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), outputPath && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processed Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000${outputPath}`,\n        alt: \"Processed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download Processed Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c7IqM+13MqNN+aMt6jSd/ngheRk=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [file, setFile] = useState(null);\n//   const [outputPath, setOutputPath] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setFile(event.target.files[0]);\n//   };\n\n//   const handleFileUpload = async () => {\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n\n//       const { output } = response.data;\n//       setOutputPath(output);\n//       console.log()\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" onChange={handleFileChange} />\n//       <button onClick={handleFileUpload}>Upload and Process</button>\n\n//       {outputPath && (\n//         <div>\n//           <p>Output Image:</p>\n//           <img src={`http://localhost:8000${outputPath}`} alt=\"Output\" />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","file","setFile","outputPath","setOutputPath","handleFileChange","event","selectedFile","target","files","handleFileUpload","formData","FormData","append","response","fetch","method","body","result","json","console","log","output","error","handleDownload","window","open","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/tanmayiballa/User_interactive_image_segmentation/image-processing-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [outputPath, setOutputPath] = useState(null);\n\n  const handleFileChange = (event) => {\n    const selectedFile = event.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const handleFileUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('http://localhost:8000/uploadfile/', {\n        method: 'POST',\n        body: formData,\n      }); \n\n      const result = await response.json();\n      console.log(result.output);\n      setOutputPath(result.output);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n  const handleDownload = async () => {\n    // Trigger download for the processed file\n    window.open(`http://localhost:8000/download/sample_out_det.jpg`, '_blank');\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleFileUpload}>Upload and Process</button>\n\n      {outputPath && (\n        <div>\n          <p>Processed Image:</p>\n          <img src={`http://localhost:8000${outputPath}`} alt=\"Processed\" />\n          <button onClick={handleDownload}>Download Processed Image</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function App() {\n//   const [file, setFile] = useState(null);\n//   const [outputPath, setOutputPath] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     setFile(event.target.files[0]);\n//   };\n\n//   const handleFileUpload = async () => {\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n\n//       const { output } = response.data;\n//       setOutputPath(output);\n//       console.log()\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" onChange={handleFileChange} />\n//       <button onClick={handleFileUpload}>Upload and Process</button>\n\n//       {outputPath && (\n//         <div>\n//           <p>Output Image:</p>\n//           <img src={`http://localhost:8000${outputPath}`} alt=\"Output\" />\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tanmayiballa/User_interactive_image_segmentation/image-processing-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [segmentedImage, setSegmentedImage] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSegmentedImage(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".png, .jpg, .jpeg\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), segmentedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Segmented Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8000/${segmentedImage}`,\n        alt: \"Segmented\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FGbFAIX2kYi2vhsLJN/Dhcr1ZRs=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from 'react';\n\n// function App() {\n//   const [file, setFile] = useState(null);\n//   const [outputPath, setOutputPath] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     const selectedFile = event.target.files[0];\n//     setFile(selectedFile);\n//   };\n\n//   const handleFileUpload = async () => {\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await fetch('http://localhost:8000/uploadfile/', {\n//         method: 'POST',\n//         body: formData,\n//       }); \n\n//       const result = await response.json();\n//       console.log(result.output);\n//       setOutputPath(result.output);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   const handleDownload = async () => {\n//     // Trigger download for the processed file\n//     window.open(`http://localhost:8000/download/sample_out_det.jpg`, '_blank');\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" onChange={handleFileChange} />\n//       <button onClick={handleFileUpload}>Upload and Process</button>\n\n//       {outputPath && (\n//         <div>\n//           <p>Processed Image:</p>\n//           <img src={`http://localhost:8000${outputPath}`} alt=\"Processed\" />\n//           <button onClick={handleDownload}>Download Processed Image</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n\n// // function App() {\n// //   const [file, setFile] = useState(null);\n// //   const [outputPath, setOutputPath] = useState(null);\n\n// //   const handleFileChange = (event) => {\n// //     setFile(event.target.files[0]);\n// //   };\n\n// //   const handleFileUpload = async () => {\n// //     const formData = new FormData();\n// //     formData.append('file', file);\n\n// //     try {\n// //       const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n// //         headers: {\n// //           'Content-Type': 'multipart/form-data',\n// //         },\n// //       });\n\n// //       const { output } = response.data;\n// //       setOutputPath(output);\n// //       console.log()\n// //     } catch (error) {\n// //       console.error('Error uploading file:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <input type=\"file\" onChange={handleFileChange} />\n// //       <button onClick={handleFileUpload}>Upload and Process</button>\n\n// //       {outputPath && (\n// //         <div>\n// //           <p>Output Image:</p>\n// //           <img src={`http://localhost:8000${outputPath}`} alt=\"Output\" />\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","segmentedImage","setSegmentedImage","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","data","error","console","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/tanmayiballa/User_interactive_image_segmentation/image-processing-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [segmentedImage, setSegmentedImage] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setSegmentedImage(response.data);\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" accept=\".png, .jpg, .jpeg\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload and Segment</button>\n\n      {segmentedImage && (\n        <div>\n          <h2>Segmented Image:</h2>\n          <img src={`http://localhost:8000/${segmentedImage}`} alt=\"Segmented\" />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n// import React, { useState } from 'react';\n\n// function App() {\n//   const [file, setFile] = useState(null);\n//   const [outputPath, setOutputPath] = useState(null);\n\n//   const handleFileChange = (event) => {\n//     const selectedFile = event.target.files[0];\n//     setFile(selectedFile);\n//   };\n\n//   const handleFileUpload = async () => {\n//     const formData = new FormData();\n//     formData.append('file', file);\n\n//     try {\n//       const response = await fetch('http://localhost:8000/uploadfile/', {\n//         method: 'POST',\n//         body: formData,\n//       }); \n\n//       const result = await response.json();\n//       console.log(result.output);\n//       setOutputPath(result.output);\n//     } catch (error) {\n//       console.error('Error uploading file:', error);\n//     }\n//   };\n\n//   const handleDownload = async () => {\n//     // Trigger download for the processed file\n//     window.open(`http://localhost:8000/download/sample_out_det.jpg`, '_blank');\n//   };\n\n//   return (\n//     <div>\n//       <input type=\"file\" onChange={handleFileChange} />\n//       <button onClick={handleFileUpload}>Upload and Process</button>\n\n//       {outputPath && (\n//         <div>\n//           <p>Processed Image:</p>\n//           <img src={`http://localhost:8000${outputPath}`} alt=\"Processed\" />\n//           <button onClick={handleDownload}>Download Processed Image</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n\n// // function App() {\n// //   const [file, setFile] = useState(null);\n// //   const [outputPath, setOutputPath] = useState(null);\n\n// //   const handleFileChange = (event) => {\n// //     setFile(event.target.files[0]);\n// //   };\n\n// //   const handleFileUpload = async () => {\n// //     const formData = new FormData();\n// //     formData.append('file', file);\n\n// //     try {\n// //       const response = await axios.post('http://localhost:8000/uploadfile/', formData, {\n// //         headers: {\n// //           'Content-Type': 'multipart/form-data',\n// //         },\n// //       });\n\n// //       const { output } = response.data;\n// //       setOutputPath(output);\n// //       console.log()\n// //     } catch (error) {\n// //       console.error('Error uploading file:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div>\n// //       <input type=\"file\" onChange={handleFileChange} />\n// //       <button onClick={handleFileUpload}>Upload and Process</button>\n\n// //       {outputPath && (\n// //         <div>\n// //           <p>Output Image:</p>\n// //           <img src={`http://localhost:8000${outputPath}`} alt=\"Output\" />\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// // export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,EAAE;QAC/EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFX,iBAAiB,CAACS,QAAQ,CAACG,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,mBAAmB;MAACC,QAAQ,EAAEjB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5E5B,OAAA;MAAQ6B,OAAO,EAAElB,YAAa;MAAAU,QAAA,EAAC;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEzDvB,cAAc,iBACbL,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzB5B,OAAA;QAAK8B,GAAG,EAAG,yBAAwBzB,cAAe,EAAE;QAAC0B,GAAG,EAAC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAtCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAwCZ,eAAeA,GAAG;;AAGlB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}